import { validateBooking } from "../utils/validateBooking";

describe("validateBooking", () => {
  const baseData = {
    duration: 2,
    isGuest: false,
    userId: "testUserId",
    guestName: "",
    guestSurname: "",
    guestPhone: "",
  };

  test("–ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –¥–∞—Ç–∞ –≤ –º–∏–Ω—É–ª–æ–º—É", () => {
    const result = validateBooking({
      ...baseData,
      date: "2000-01-01",
      time: "12:00",
    });
    expect(result).toMatch(/–≤ –º–∏–Ω—É–ª–æ–º—É/);
  });

  test("–ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ —á–∞—Å –¥–æ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è (–±—É–¥–Ω—ñ–π –¥–µ–Ω—å)", () => {
    const futureWeekday = getFutureDateByWeekday(1); // –ü–æ–Ω–µ–¥—ñ–ª–æ–∫
    const result = validateBooking({
      ...baseData,
      date: futureWeekday,
      time: "10:00",
    });
    expect(result).toMatch(/–†–µ—Å—Ç–æ—Ä–∞–Ω –ø—Ä–∞—Ü—é—î –∑ 12:00/);
  });

  test("–ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ —á–∞—Å –ø—ñ—Å–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è", () => {
    const futureDate = getFutureDateByWeekday(2); // –í—ñ–≤—Ç–æ—Ä–æ–∫
    const result = validateBooking({
      ...baseData,
      date: futureDate,
      time: "23:30",
    });
    expect(result).toMatch(/–û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à–∏–π —á–∞—Å/);
  });

  test("–Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ —á–∞—Å—É –≤ –±—É–¥–Ω—ñ–π –¥–µ–Ω—å", () => {
    const futureDate = getFutureDateByWeekday(3); // –°–µ—Ä–µ–¥–∞
    const result = validateBooking({
      ...baseData,
      date: futureDate,
      time: "13:00",
    });
    expect(result).toBe(null);
  });

  test("–Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ —á–∞—Å—É —É –≤–∏—Ö—ñ–¥–Ω–∏–π", () => {
    const futureWeekend = getFutureDateByWeekday(6); // –°—É–±–æ—Ç–∞
    const result = validateBooking({
      ...baseData,
      date: futureWeekend,
      time: "11:30",
    });
    expect(result).toBe(null);
  });

  describe("–≤–∞–ª–∏–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –≥–æ—Å—Ç—è", () => {
    const guestBase = {
      ...baseData,
      isGuest: true,
      userId: null,
      date: getFutureDateByWeekday(4),
      time: "14:00",
    };

    test("–ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø–æ–ª—è –ø–æ—Ä–æ–∂–Ω—ñ", () => {
      const result = validateBooking({
        ...guestBase,
        guestName: "",
        guestSurname: "",
        guestPhone: "",
      });
      expect(result).toMatch(/–∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è/);
    });

    test("–ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ —ñ–º‚Äô—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ", () => {
      const result = validateBooking({
        ...guestBase,
        guestName: "1",
        guestSurname: "–Ü–≤–∞–Ω–æ–≤",
        guestPhone: "+380991234567",
      });
      expect(result).toMatch(/—ñ–º‚Äô—è/);
    });

    test("–ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –ø—Ä—ñ–∑–≤–∏—â–µ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ", () => {
      const result = validateBooking({
        ...guestBase,
        guestName: "–Ü–≤–∞–Ω",
        guestSurname: "1",
        guestPhone: "+380991234567",
      });
      expect(result).toMatch(/–ø—Ä—ñ–∑–≤–∏—â–µ/);
    });

    test("–ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π", () => {
      const result = validateBooking({
        ...guestBase,
        guestName: "–Ü–≤–∞–Ω",
        guestSurname: "–Ü–≤–∞–Ω–æ–≤",
        guestPhone: "12345",
      });
      expect(result).toMatch(/—Ç–µ–ª–µ—Ñ–æ–Ω—É/);
    });

    test("–Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ —É—Å—ñ –ø–æ–ª—è –∫–æ—Ä–µ–∫—Ç–Ω—ñ", () => {
      const result = validateBooking({
        ...guestBase,
        guestName: "–Ü–≤–∞–Ω",
        guestSurname: "–Ü–≤–∞–Ω–æ–≤",
        guestPhone: "+380991234567",
      });
      expect(result).toBe(null);
    });
  });
});

// üß© –î–æ–ø–æ–º—ñ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è: –∑–Ω–∞–π—Ç–∏ –º–∞–π–±—É—Ç–Ω—é –¥–∞—Ç—É –∑–∞ –¥–Ω–µ–º —Ç–∏–∂–Ω—è
function getFutureDateByWeekday(desiredDay) {
  const today = new Date();
  const currentDay = today.getDay();
  const diff = (desiredDay + 7 - currentDay) % 7 || 7;
  const targetDate = new Date(today);
  targetDate.setDate(today.getDate() + diff);
  return targetDate.toISOString().split("T")[0];
}
